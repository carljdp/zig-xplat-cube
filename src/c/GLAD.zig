// generics
const std = @import("std");

/// Wrapper for GLAD with remapped types and functions
pub fn remapped() type {
    return struct {
        const self = @This();
        const c = struct {
            usingnamespace @import("imports.zig");
        };

        // TYPES (as-is passthrough)
        pub const Void = void;
        // TYPES (renamed passthrough)
        pub const Int = c_int;
        pub const Byte = u8;
        /// c string (pointer to first char)
        pub const cString = [*c]const Byte;

        /// non-optional variant of GLADapiproc
        pub const ApiProc = *const fn () callconv(.C) void;
        /// non-optional variant of GLADloadfunc
        pub const LoadFunc = *const fn (cString) callconv(.C) ApiProc;

        // Pasted for future reference
        // /// non-optional variant of GLADuserptrloadfunc
        // pub const Userptrloadfunc = *const fn (?*anyopaque, cString) callconv(.C) GLADapiproc;
        // /// non-optional variant of GLADprecallback
        // pub const Precallback = *const fn (cString, ApiProc, cInt, ...) callconv(.C) void;
        // /// non-optional variant of GLADpostcallback
        // pub const Postcallback = *const fn (?*anyopaque, cString, ApiProc, cInt, ...) callconv(.C) void;

        pub fn loadGl(load: LoadFunc) Int {
            return c.gladLoadGL(load);
        }

        // Pasted for future reference
        // pub extern var GLAD_GL_VERSION_1_0: c_int;
        // pub extern var GLAD_GL_VERSION_1_1: c_int;
        // pub extern var GLAD_GL_VERSION_1_2: c_int;
        // pub extern var GLAD_GL_VERSION_1_3: c_int;
        // pub extern var GLAD_GL_VERSION_1_4: c_int;
        // pub extern var GLAD_GL_VERSION_1_5: c_int;
        // pub extern var GLAD_GL_VERSION_2_0: c_int;
        // pub extern var GLAD_GL_VERSION_2_1: c_int;
        // pub extern var GLAD_GL_VERSION_3_0: c_int;
        // pub extern var GLAD_GL_VERSION_3_1: c_int;
        // pub extern var GLAD_GL_VERSION_3_2: c_int;
        // pub extern var GLAD_GL_VERSION_3_3: c_int;
        // pub extern var GLAD_GL_VERSION_4_0: c_int;
        // pub extern var GLAD_GL_VERSION_4_1: c_int;
        // pub const PFNGLACTIVESHADERPROGRAMPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLACTIVETEXTUREPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLATTACHSHADERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLBEGINCONDITIONALRENDERPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
        // pub const PFNGLBEGINQUERYPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLBEGINQUERYINDEXEDPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLBEGINTRANSFORMFEEDBACKPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLBINDATTRIBLOCATIONPROC = ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
        // pub const PFNGLBINDBUFFERPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLBINDBUFFERBASEPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLBINDBUFFERRANGEPROC = ?*const fn (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) callconv(.C) void;
        // pub const PFNGLBINDFRAGDATALOCATIONPROC = ?*const fn (GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
        // pub const PFNGLBINDFRAGDATALOCATIONINDEXEDPROC = ?*const fn (GLuint, GLuint, GLuint, [*c]const GLchar) callconv(.C) void;
        // pub const PFNGLBINDFRAMEBUFFERPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLBINDPROGRAMPIPELINEPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLBINDRENDERBUFFERPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLBINDSAMPLERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLBINDTEXTUREPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLBINDTRANSFORMFEEDBACKPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLBINDVERTEXARRAYPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLBLENDCOLORPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLBLENDEQUATIONPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLBLENDEQUATIONSEPARATEPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLBLENDEQUATIONSEPARATEIPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLBLENDEQUATIONIPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
        // pub const PFNGLBLENDFUNCPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLBLENDFUNCSEPARATEPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLBLENDFUNCSEPARATEIPROC = ?*const fn (GLuint, GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLBLENDFUNCIPROC = ?*const fn (GLuint, GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLBLITFRAMEBUFFERPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) callconv(.C) void;
        // pub const PFNGLBUFFERDATAPROC = ?*const fn (GLenum, GLsizeiptr, ?*const anyopaque, GLenum) callconv(.C) void;
        // pub const PFNGLBUFFERSUBDATAPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCHECKFRAMEBUFFERSTATUSPROC = ?*const fn (GLenum) callconv(.C) GLenum;
        // pub const PFNGLCLAMPCOLORPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLCLEARPROC = ?*const fn (GLbitfield) callconv(.C) void;
        // pub const PFNGLCLEARBUFFERFIPROC = ?*const fn (GLenum, GLint, GLfloat, GLint) callconv(.C) void;
        // pub const PFNGLCLEARBUFFERFVPROC = ?*const fn (GLenum, GLint, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLCLEARBUFFERIVPROC = ?*const fn (GLenum, GLint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLCLEARBUFFERUIVPROC = ?*const fn (GLenum, GLint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLCLEARCOLORPROC = ?*const fn (GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLCLEARDEPTHPROC = ?*const fn (GLdouble) callconv(.C) void;
        // pub const PFNGLCLEARDEPTHFPROC = ?*const fn (GLfloat) callconv(.C) void;
        // pub const PFNGLCLEARSTENCILPROC = ?*const fn (GLint) callconv(.C) void;
        // pub const PFNGLCLIENTWAITSYNCPROC = ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) GLenum;
        // pub const PFNGLCOLORMASKPROC = ?*const fn (GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
        // pub const PFNGLCOLORMASKIPROC = ?*const fn (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) callconv(.C) void;
        // pub const PFNGLCOMPILESHADERPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLCOMPRESSEDTEXIMAGE1DPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCOMPRESSEDTEXIMAGE2DPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCOMPRESSEDTEXIMAGE3DPROC = ?*const fn (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLCOPYBUFFERSUBDATAPROC = ?*const fn (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) callconv(.C) void;
        // pub const PFNGLCOPYTEXIMAGE1DPROC = ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) callconv(.C) void;
        // pub const PFNGLCOPYTEXIMAGE2DPROC = ?*const fn (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) callconv(.C) void;
        // pub const PFNGLCOPYTEXSUBIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei) callconv(.C) void;
        // pub const PFNGLCOPYTEXSUBIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLCOPYTEXSUBIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLCREATEPROGRAMPROC = ?*const fn () callconv(.C) GLuint;
        // pub const PFNGLCREATESHADERPROC = ?*const fn (GLenum) callconv(.C) GLuint;
        // pub const PFNGLCREATESHADERPROGRAMVPROC = ?*const fn (GLenum, GLsizei, [*c]const [*c]const GLchar) callconv(.C) GLuint;
        // pub const PFNGLCULLFACEPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLDELETEBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETEFRAMEBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETEPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLDELETEPROGRAMPIPELINESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETEQUERIESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETERENDERBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETESAMPLERSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETESHADERPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLDELETESYNCPROC = ?*const fn (GLsync) callconv(.C) void;
        // pub const PFNGLDELETETEXTURESPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETETRANSFORMFEEDBACKSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDELETEVERTEXARRAYSPROC = ?*const fn (GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLDEPTHFUNCPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLDEPTHMASKPROC = ?*const fn (GLboolean) callconv(.C) void;
        // pub const PFNGLDEPTHRANGEPROC = ?*const fn (GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLDEPTHRANGEARRAYVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLDEPTHRANGEINDEXEDPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLDEPTHRANGEFPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLDETACHSHADERPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLDISABLEPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLDISABLEVERTEXATTRIBARRAYPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLDISABLEIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLDRAWARRAYSPROC = ?*const fn (GLenum, GLint, GLsizei) callconv(.C) void;
        // pub const PFNGLDRAWARRAYSINDIRECTPROC = ?*const fn (GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLDRAWARRAYSINSTANCEDPROC = ?*const fn (GLenum, GLint, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLDRAWBUFFERPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLDRAWBUFFERSPROC = ?*const fn (GLsizei, [*c]const GLenum) callconv(.C) void;
        // pub const PFNGLDRAWELEMENTSPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLDRAWELEMENTSBASEVERTEXPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
        // pub const PFNGLDRAWELEMENTSINDIRECTPROC = ?*const fn (GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLDRAWELEMENTSINSTANCEDPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
        // pub const PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC = ?*const fn (GLenum, GLsizei, GLenum, ?*const anyopaque, GLsizei, GLint) callconv(.C) void;
        // pub const PFNGLDRAWRANGEELEMENTSPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC = ?*const fn (GLenum, GLuint, GLuint, GLsizei, GLenum, ?*const anyopaque, GLint) callconv(.C) void;
        // pub const PFNGLDRAWTRANSFORMFEEDBACKPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC = ?*const fn (GLenum, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLENABLEPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLENABLEVERTEXATTRIBARRAYPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLENABLEIPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLENDCONDITIONALRENDERPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLENDQUERYPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLENDQUERYINDEXEDPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLENDTRANSFORMFEEDBACKPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLFENCESYNCPROC = ?*const fn (GLenum, GLbitfield) callconv(.C) GLsync;
        // pub const PFNGLFINISHPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLFLUSHPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLFLUSHMAPPEDBUFFERRANGEPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr) callconv(.C) void;
        // pub const PFNGLFRAMEBUFFERRENDERBUFFERPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLFRAMEBUFFERTEXTUREPROC = ?*const fn (GLenum, GLenum, GLuint, GLint) callconv(.C) void;
        // pub const PFNGLFRAMEBUFFERTEXTURE1DPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
        // pub const PFNGLFRAMEBUFFERTEXTURE2DPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint) callconv(.C) void;
        // pub const PFNGLFRAMEBUFFERTEXTURE3DPROC = ?*const fn (GLenum, GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLFRAMEBUFFERTEXTURELAYERPROC = ?*const fn (GLenum, GLenum, GLuint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLFRONTFACEPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLGENBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENFRAMEBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENPROGRAMPIPELINESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENQUERIESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENRENDERBUFFERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENSAMPLERSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENTEXTURESPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENTRANSFORMFEEDBACKSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENVERTEXARRAYSPROC = ?*const fn (GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGENERATEMIPMAPPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLGETACTIVEATTRIBPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETACTIVESUBROUTINENAMEPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC = ?*const fn (GLuint, GLenum, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC = ?*const fn (GLuint, GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETACTIVEUNIFORMPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLint, [*c]GLenum, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETACTIVEUNIFORMBLOCKIVPROC = ?*const fn (GLuint, GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETACTIVEUNIFORMNAMEPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETACTIVEUNIFORMSIVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETATTACHEDSHADERSPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETATTRIBLOCATIONPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
        // pub const PFNGLGETBOOLEANI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLboolean) callconv(.C) void;
        // pub const PFNGLGETBOOLEANVPROC = ?*const fn (GLenum, [*c]GLboolean) callconv(.C) void;
        // pub const PFNGLGETBUFFERPARAMETERI64VPROC = ?*const fn (GLenum, GLenum, [*c]GLint64) callconv(.C) void;
        // pub const PFNGLGETBUFFERPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETBUFFERPOINTERVPROC = ?*const fn (GLenum, GLenum, [*c]?*anyopaque) callconv(.C) void;
        // pub const PFNGLGETBUFFERSUBDATAPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, ?*anyopaque) callconv(.C) void;
        // pub const PFNGLGETCOMPRESSEDTEXIMAGEPROC = ?*const fn (GLenum, GLint, ?*anyopaque) callconv(.C) void;
        // pub const PFNGLGETDOUBLEI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLdouble) callconv(.C) void;
        // pub const PFNGLGETDOUBLEVPROC = ?*const fn (GLenum, [*c]GLdouble) callconv(.C) void;
        // pub const PFNGLGETERRORPROC = ?*const fn () callconv(.C) GLenum;
        // pub const PFNGLGETFLOATI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETFLOATVPROC = ?*const fn (GLenum, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETFRAGDATAINDEXPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
        // pub const PFNGLGETFRAGDATALOCATIONPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
        // pub const PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC = ?*const fn (GLenum, GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETINTEGER64I_VPROC = ?*const fn (GLenum, GLuint, [*c]GLint64) callconv(.C) void;
        // pub const PFNGLGETINTEGER64VPROC = ?*const fn (GLenum, [*c]GLint64) callconv(.C) void;
        // pub const PFNGLGETINTEGERI_VPROC = ?*const fn (GLenum, GLuint, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETINTEGERVPROC = ?*const fn (GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETMULTISAMPLEFVPROC = ?*const fn (GLenum, GLuint, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETPROGRAMBINARYPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLenum, ?*anyopaque) callconv(.C) void;
        // pub const PFNGLGETPROGRAMINFOLOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETPROGRAMPIPELINEINFOLOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETPROGRAMPIPELINEIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETPROGRAMSTAGEIVPROC = ?*const fn (GLuint, GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETPROGRAMIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETQUERYINDEXEDIVPROC = ?*const fn (GLenum, GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETQUERYOBJECTI64VPROC = ?*const fn (GLuint, GLenum, [*c]GLint64) callconv(.C) void;
        // pub const PFNGLGETQUERYOBJECTIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETQUERYOBJECTUI64VPROC = ?*const fn (GLuint, GLenum, [*c]GLuint64) callconv(.C) void;
        // pub const PFNGLGETQUERYOBJECTUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETQUERYIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETRENDERBUFFERPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETSAMPLERPARAMETERIIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETSAMPLERPARAMETERIUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETSAMPLERPARAMETERFVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETSAMPLERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETSHADERINFOLOGPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETSHADERPRECISIONFORMATPROC = ?*const fn (GLenum, GLenum, [*c]GLint, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETSHADERSOURCEPROC = ?*const fn (GLuint, GLsizei, [*c]GLsizei, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETSHADERIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETSTRINGPROC = ?*const fn (GLenum) callconv(.C) [*c]const GLubyte;
        // pub const PFNGLGETSTRINGIPROC = ?*const fn (GLenum, GLuint) callconv(.C) [*c]const GLubyte;
        // pub const PFNGLGETSUBROUTINEINDEXPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLuint;
        // pub const PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC = ?*const fn (GLuint, GLenum, [*c]const GLchar) callconv(.C) GLint;
        // pub const PFNGLGETSYNCIVPROC = ?*const fn (GLsync, GLenum, GLsizei, [*c]GLsizei, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETTEXIMAGEPROC = ?*const fn (GLenum, GLint, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
        // pub const PFNGLGETTEXLEVELPARAMETERFVPROC = ?*const fn (GLenum, GLint, GLenum, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETTEXLEVELPARAMETERIVPROC = ?*const fn (GLenum, GLint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETTEXPARAMETERIIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETTEXPARAMETERIUIVPROC = ?*const fn (GLenum, GLenum, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETTEXPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETTEXPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETTRANSFORMFEEDBACKVARYINGPROC = ?*const fn (GLuint, GLuint, GLsizei, [*c]GLsizei, [*c]GLsizei, [*c]GLenum, [*c]GLchar) callconv(.C) void;
        // pub const PFNGLGETUNIFORMBLOCKINDEXPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLuint;
        // pub const PFNGLGETUNIFORMINDICESPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETUNIFORMLOCATIONPROC = ?*const fn (GLuint, [*c]const GLchar) callconv(.C) GLint;
        // pub const PFNGLGETUNIFORMSUBROUTINEUIVPROC = ?*const fn (GLenum, GLint, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETUNIFORMDVPROC = ?*const fn (GLuint, GLint, [*c]GLdouble) callconv(.C) void;
        // pub const PFNGLGETUNIFORMFVPROC = ?*const fn (GLuint, GLint, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETUNIFORMIVPROC = ?*const fn (GLuint, GLint, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETUNIFORMUIVPROC = ?*const fn (GLuint, GLint, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBIIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBIUIVPROC = ?*const fn (GLuint, GLenum, [*c]GLuint) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBLDVPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBPOINTERVPROC = ?*const fn (GLuint, GLenum, [*c]?*anyopaque) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBDVPROC = ?*const fn (GLuint, GLenum, [*c]GLdouble) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBFVPROC = ?*const fn (GLuint, GLenum, [*c]GLfloat) callconv(.C) void;
        // pub const PFNGLGETVERTEXATTRIBIVPROC = ?*const fn (GLuint, GLenum, [*c]GLint) callconv(.C) void;
        // pub const PFNGLHINTPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLISBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISENABLEDPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
        // pub const PFNGLISENABLEDIPROC = ?*const fn (GLenum, GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISFRAMEBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISPROGRAMPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISPROGRAMPIPELINEPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISQUERYPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISRENDERBUFFERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISSAMPLERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISSHADERPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISSYNCPROC = ?*const fn (GLsync) callconv(.C) GLboolean;
        // pub const PFNGLISTEXTUREPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISTRANSFORMFEEDBACKPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLISVERTEXARRAYPROC = ?*const fn (GLuint) callconv(.C) GLboolean;
        // pub const PFNGLLINEWIDTHPROC = ?*const fn (GLfloat) callconv(.C) void;
        // pub const PFNGLLINKPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLLOGICOPPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLMAPBUFFERPROC = ?*const fn (GLenum, GLenum) callconv(.C) ?*anyopaque;
        // pub const PFNGLMAPBUFFERRANGEPROC = ?*const fn (GLenum, GLintptr, GLsizeiptr, GLbitfield) callconv(.C) ?*anyopaque;
        // pub const PFNGLMINSAMPLESHADINGPROC = ?*const fn (GLfloat) callconv(.C) void;
        // pub const PFNGLMULTIDRAWARRAYSPROC = ?*const fn (GLenum, [*c]const GLint, [*c]const GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLMULTIDRAWELEMENTSPROC = ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei) callconv(.C) void;
        // pub const PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC = ?*const fn (GLenum, [*c]const GLsizei, GLenum, [*c]const ?*const anyopaque, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLPATCHPARAMETERFVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPATCHPARAMETERIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
        // pub const PFNGLPAUSETRANSFORMFEEDBACKPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLPIXELSTOREFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
        // pub const PFNGLPIXELSTOREIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
        // pub const PFNGLPOINTPARAMETERFPROC = ?*const fn (GLenum, GLfloat) callconv(.C) void;
        // pub const PFNGLPOINTPARAMETERFVPROC = ?*const fn (GLenum, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPOINTPARAMETERIPROC = ?*const fn (GLenum, GLint) callconv(.C) void;
        // pub const PFNGLPOINTPARAMETERIVPROC = ?*const fn (GLenum, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLPOINTSIZEPROC = ?*const fn (GLfloat) callconv(.C) void;
        // pub const PFNGLPOLYGONMODEPROC = ?*const fn (GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLPOLYGONOFFSETPROC = ?*const fn (GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLPRIMITIVERESTARTINDEXPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMBINARYPROC = ?*const fn (GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
        // pub const PFNGLPROGRAMPARAMETERIPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1DPROC = ?*const fn (GLuint, GLint, GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1FPROC = ?*const fn (GLuint, GLint, GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1IPROC = ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1UIPROC = ?*const fn (GLuint, GLint, GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM1UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2DPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2FPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2IPROC = ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2UIPROC = ?*const fn (GLuint, GLint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM2UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3DPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3FPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3IPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3UIPROC = ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM3UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4DPROC = ?*const fn (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4DVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4FPROC = ?*const fn (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4FVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4IPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4IVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4UIPROC = ?*const fn (GLuint, GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORM4UIVPROC = ?*const fn (GLuint, GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX2DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX2FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX3DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX3FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX4DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX4FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC = ?*const fn (GLuint, GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLPROVOKINGVERTEXPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLQUERYCOUNTERPROC = ?*const fn (GLuint, GLenum) callconv(.C) void;
        // pub const PFNGLREADBUFFERPROC = ?*const fn (GLenum) callconv(.C) void;
        // pub const PFNGLREADPIXELSPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*anyopaque) callconv(.C) void;
        // pub const PFNGLRELEASESHADERCOMPILERPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLRENDERBUFFERSTORAGEPROC = ?*const fn (GLenum, GLenum, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLRESUMETRANSFORMFEEDBACKPROC = ?*const fn () callconv(.C) void;
        // pub const PFNGLSAMPLECOVERAGEPROC = ?*const fn (GLfloat, GLboolean) callconv(.C) void;
        // pub const PFNGLSAMPLEMASKIPROC = ?*const fn (GLuint, GLbitfield) callconv(.C) void;
        // pub const PFNGLSAMPLERPARAMETERIIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLSAMPLERPARAMETERIUIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLSAMPLERPARAMETERFPROC = ?*const fn (GLuint, GLenum, GLfloat) callconv(.C) void;
        // pub const PFNGLSAMPLERPARAMETERFVPROC = ?*const fn (GLuint, GLenum, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLSAMPLERPARAMETERIPROC = ?*const fn (GLuint, GLenum, GLint) callconv(.C) void;
        // pub const PFNGLSAMPLERPARAMETERIVPROC = ?*const fn (GLuint, GLenum, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLSCISSORPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLSCISSORARRAYVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLSCISSORINDEXEDPROC = ?*const fn (GLuint, GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLSCISSORINDEXEDVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLSHADERBINARYPROC = ?*const fn (GLsizei, [*c]const GLuint, GLenum, ?*const anyopaque, GLsizei) callconv(.C) void;
        // pub const PFNGLSHADERSOURCEPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLSTENCILFUNCPROC = ?*const fn (GLenum, GLint, GLuint) callconv(.C) void;
        // pub const PFNGLSTENCILFUNCSEPARATEPROC = ?*const fn (GLenum, GLenum, GLint, GLuint) callconv(.C) void;
        // pub const PFNGLSTENCILMASKPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLSTENCILMASKSEPARATEPROC = ?*const fn (GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLSTENCILOPPROC = ?*const fn (GLenum, GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLSTENCILOPSEPARATEPROC = ?*const fn (GLenum, GLenum, GLenum, GLenum) callconv(.C) void;
        // pub const PFNGLTEXBUFFERPROC = ?*const fn (GLenum, GLenum, GLuint) callconv(.C) void;
        // pub const PFNGLTEXIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLTEXIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLTEXIMAGE2DMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean) callconv(.C) void;
        // pub const PFNGLTEXIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLTEXIMAGE3DMULTISAMPLEPROC = ?*const fn (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean) callconv(.C) void;
        // pub const PFNGLTEXPARAMETERIIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLTEXPARAMETERIUIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLTEXPARAMETERFPROC = ?*const fn (GLenum, GLenum, GLfloat) callconv(.C) void;
        // pub const PFNGLTEXPARAMETERFVPROC = ?*const fn (GLenum, GLenum, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLTEXPARAMETERIPROC = ?*const fn (GLenum, GLenum, GLint) callconv(.C) void;
        // pub const PFNGLTEXPARAMETERIVPROC = ?*const fn (GLenum, GLenum, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLTEXSUBIMAGE1DPROC = ?*const fn (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLTEXSUBIMAGE2DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLTEXSUBIMAGE3DPROC = ?*const fn (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLTRANSFORMFEEDBACKVARYINGSPROC = ?*const fn (GLuint, GLsizei, [*c]const [*c]const GLchar, GLenum) callconv(.C) void;
        // pub const PFNGLUNIFORM1DPROC = ?*const fn (GLint, GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM1DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM1FPROC = ?*const fn (GLint, GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM1FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM1IPROC = ?*const fn (GLint, GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM1IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM1UIPROC = ?*const fn (GLint, GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM1UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM2DPROC = ?*const fn (GLint, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM2DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM2FPROC = ?*const fn (GLint, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM2FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM2IPROC = ?*const fn (GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM2IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM2UIPROC = ?*const fn (GLint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM2UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM3DPROC = ?*const fn (GLint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM3DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM3FPROC = ?*const fn (GLint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM3FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM3IPROC = ?*const fn (GLint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM3IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM3UIPROC = ?*const fn (GLint, GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM3UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM4DPROC = ?*const fn (GLint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM4DVPROC = ?*const fn (GLint, GLsizei, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORM4FPROC = ?*const fn (GLint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM4FVPROC = ?*const fn (GLint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORM4IPROC = ?*const fn (GLint, GLint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM4IVPROC = ?*const fn (GLint, GLsizei, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLUNIFORM4UIPROC = ?*const fn (GLint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORM4UIVPROC = ?*const fn (GLint, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORMBLOCKBINDINGPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX2DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX2FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX2X3DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX2X3FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX2X4DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX2X4FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX3DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX3FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX3X2DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX3X2FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX3X4DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX3X4FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX4DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX4FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX4X2DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX4X2FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX4X3DVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLUNIFORMMATRIX4X3FVPROC = ?*const fn (GLint, GLsizei, GLboolean, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLUNIFORMSUBROUTINESUIVPROC = ?*const fn (GLenum, GLsizei, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLUNMAPBUFFERPROC = ?*const fn (GLenum) callconv(.C) GLboolean;
        // pub const PFNGLUSEPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLUSEPROGRAMSTAGESPROC = ?*const fn (GLuint, GLbitfield, GLuint) callconv(.C) void;
        // pub const PFNGLVALIDATEPROGRAMPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLVALIDATEPROGRAMPIPELINEPROC = ?*const fn (GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB1DPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB1DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB1FPROC = ?*const fn (GLuint, GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB1FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB1SPROC = ?*const fn (GLuint, GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB1SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB2DPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB2DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB2FPROC = ?*const fn (GLuint, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB2FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB2SPROC = ?*const fn (GLuint, GLshort, GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB2SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB3DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB3DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB3FPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB3FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB3SPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB3SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NBVPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NIVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NSVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NUBPROC = ?*const fn (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NUBVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NUIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4NUSVPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4BVPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4FPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4FVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4SPROC = ?*const fn (GLuint, GLshort, GLshort, GLshort, GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4UBVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIB4USVPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBDIVISORPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI1IPROC = ?*const fn (GLuint, GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI1IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI1UIPROC = ?*const fn (GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI1UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI2IPROC = ?*const fn (GLuint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI2IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI2UIPROC = ?*const fn (GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI2UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI3IPROC = ?*const fn (GLuint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI3IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI3UIPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI3UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4BVPROC = ?*const fn (GLuint, [*c]const GLbyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4IPROC = ?*const fn (GLuint, GLint, GLint, GLint, GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4IVPROC = ?*const fn (GLuint, [*c]const GLint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4SVPROC = ?*const fn (GLuint, [*c]const GLshort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4UBVPROC = ?*const fn (GLuint, [*c]const GLubyte) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4UIPROC = ?*const fn (GLuint, GLuint, GLuint, GLuint, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4UIVPROC = ?*const fn (GLuint, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBI4USVPROC = ?*const fn (GLuint, [*c]const GLushort) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBIPOINTERPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL1DPROC = ?*const fn (GLuint, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL1DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL2DPROC = ?*const fn (GLuint, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL2DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL3DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL3DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL4DPROC = ?*const fn (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBL4DVPROC = ?*const fn (GLuint, [*c]const GLdouble) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBLPOINTERPROC = ?*const fn (GLuint, GLint, GLenum, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP1UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP1UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP2UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP2UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP3UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP3UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP4UIPROC = ?*const fn (GLuint, GLenum, GLboolean, GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBP4UIVPROC = ?*const fn (GLuint, GLenum, GLboolean, [*c]const GLuint) callconv(.C) void;
        // pub const PFNGLVERTEXATTRIBPOINTERPROC = ?*const fn (GLuint, GLint, GLenum, GLboolean, GLsizei, ?*const anyopaque) callconv(.C) void;
        // pub const PFNGLVIEWPORTPROC = ?*const fn (GLint, GLint, GLsizei, GLsizei) callconv(.C) void;
        // pub const PFNGLVIEWPORTARRAYVPROC = ?*const fn (GLuint, GLsizei, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLVIEWPORTINDEXEDFPROC = ?*const fn (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) callconv(.C) void;
        // pub const PFNGLVIEWPORTINDEXEDFVPROC = ?*const fn (GLuint, [*c]const GLfloat) callconv(.C) void;
        // pub const PFNGLWAITSYNCPROC = ?*const fn (GLsync, GLbitfield, GLuint64) callconv(.C) void;
        // pub extern var glad_glActiveShaderProgram: PFNGLACTIVESHADERPROGRAMPROC;
        // pub extern var glad_glActiveTexture: PFNGLACTIVETEXTUREPROC;
        // pub extern var glad_glAttachShader: PFNGLATTACHSHADERPROC;
        // pub extern var glad_glBeginConditionalRender: PFNGLBEGINCONDITIONALRENDERPROC;
        // pub extern var glad_glBeginQuery: PFNGLBEGINQUERYPROC;
        // pub extern var glad_glBeginQueryIndexed: PFNGLBEGINQUERYINDEXEDPROC;
        // pub extern var glad_glBeginTransformFeedback: PFNGLBEGINTRANSFORMFEEDBACKPROC;
        // pub extern var glad_glBindAttribLocation: PFNGLBINDATTRIBLOCATIONPROC;
        // pub extern var glad_glBindBuffer: PFNGLBINDBUFFERPROC;
        // pub extern var glad_glBindBufferBase: PFNGLBINDBUFFERBASEPROC;
        // pub extern var glad_glBindBufferRange: PFNGLBINDBUFFERRANGEPROC;
        // pub extern var glad_glBindFragDataLocation: PFNGLBINDFRAGDATALOCATIONPROC;
        // pub extern var glad_glBindFragDataLocationIndexed: PFNGLBINDFRAGDATALOCATIONINDEXEDPROC;
        // pub extern var glad_glBindFramebuffer: PFNGLBINDFRAMEBUFFERPROC;
        // pub extern var glad_glBindProgramPipeline: PFNGLBINDPROGRAMPIPELINEPROC;
        // pub extern var glad_glBindRenderbuffer: PFNGLBINDRENDERBUFFERPROC;
        // pub extern var glad_glBindSampler: PFNGLBINDSAMPLERPROC;
        // pub extern var glad_glBindTexture: PFNGLBINDTEXTUREPROC;
        // pub extern var glad_glBindTransformFeedback: PFNGLBINDTRANSFORMFEEDBACKPROC;
        // pub extern var glad_glBindVertexArray: PFNGLBINDVERTEXARRAYPROC;
        // pub extern var glad_glBlendColor: PFNGLBLENDCOLORPROC;
        // pub extern var glad_glBlendEquation: PFNGLBLENDEQUATIONPROC;
        // pub extern var glad_glBlendEquationSeparate: PFNGLBLENDEQUATIONSEPARATEPROC;
        // pub extern var glad_glBlendEquationSeparatei: PFNGLBLENDEQUATIONSEPARATEIPROC;
        // pub extern var glad_glBlendEquationi: PFNGLBLENDEQUATIONIPROC;
        // pub extern var glad_glBlendFunc: PFNGLBLENDFUNCPROC;
        // pub extern var glad_glBlendFuncSeparate: PFNGLBLENDFUNCSEPARATEPROC;
        // pub extern var glad_glBlendFuncSeparatei: PFNGLBLENDFUNCSEPARATEIPROC;
        // pub extern var glad_glBlendFunci: PFNGLBLENDFUNCIPROC;
        // pub extern var glad_glBlitFramebuffer: PFNGLBLITFRAMEBUFFERPROC;
        // pub extern var glad_glBufferData: PFNGLBUFFERDATAPROC;
        // pub extern var glad_glBufferSubData: PFNGLBUFFERSUBDATAPROC;
        // pub extern var glad_glCheckFramebufferStatus: PFNGLCHECKFRAMEBUFFERSTATUSPROC;
        // pub extern var glad_glClampColor: PFNGLCLAMPCOLORPROC;
        // pub extern var glad_glClear: PFNGLCLEARPROC;
        // pub extern var glad_glClearBufferfi: PFNGLCLEARBUFFERFIPROC;
        // pub extern var glad_glClearBufferfv: PFNGLCLEARBUFFERFVPROC;
        // pub extern var glad_glClearBufferiv: PFNGLCLEARBUFFERIVPROC;
        // pub extern var glad_glClearBufferuiv: PFNGLCLEARBUFFERUIVPROC;
        // pub extern var glad_glClearColor: PFNGLCLEARCOLORPROC;
        // pub extern var glad_glClearDepth: PFNGLCLEARDEPTHPROC;
        // pub extern var glad_glClearDepthf: PFNGLCLEARDEPTHFPROC;
        // pub extern var glad_glClearStencil: PFNGLCLEARSTENCILPROC;
        // pub extern var glad_glClientWaitSync: PFNGLCLIENTWAITSYNCPROC;
        // pub extern var glad_glColorMask: PFNGLCOLORMASKPROC;
        // pub extern var glad_glColorMaski: PFNGLCOLORMASKIPROC;
        // pub extern var glad_glCompileShader: PFNGLCOMPILESHADERPROC;
        // pub extern var glad_glCompressedTexImage1D: PFNGLCOMPRESSEDTEXIMAGE1DPROC;
        // pub extern var glad_glCompressedTexImage2D: PFNGLCOMPRESSEDTEXIMAGE2DPROC;
        // pub extern var glad_glCompressedTexImage3D: PFNGLCOMPRESSEDTEXIMAGE3DPROC;
        // pub extern var glad_glCompressedTexSubImage1D: PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC;
        // pub extern var glad_glCompressedTexSubImage2D: PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC;
        // pub extern var glad_glCompressedTexSubImage3D: PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC;
        // pub extern var glad_glCopyBufferSubData: PFNGLCOPYBUFFERSUBDATAPROC;
        // pub extern var glad_glCopyTexImage1D: PFNGLCOPYTEXIMAGE1DPROC;
        // pub extern var glad_glCopyTexImage2D: PFNGLCOPYTEXIMAGE2DPROC;
        // pub extern var glad_glCopyTexSubImage1D: PFNGLCOPYTEXSUBIMAGE1DPROC;
        // pub extern var glad_glCopyTexSubImage2D: PFNGLCOPYTEXSUBIMAGE2DPROC;
        // pub extern var glad_glCopyTexSubImage3D: PFNGLCOPYTEXSUBIMAGE3DPROC;
        // pub extern var glad_glCreateProgram: PFNGLCREATEPROGRAMPROC;
        // pub extern var glad_glCreateShader: PFNGLCREATESHADERPROC;
        // pub extern var glad_glCreateShaderProgramv: PFNGLCREATESHADERPROGRAMVPROC;
        // pub extern var glad_glCullFace: PFNGLCULLFACEPROC;
        // pub extern var glad_glDeleteBuffers: PFNGLDELETEBUFFERSPROC;
        // pub extern var glad_glDeleteFramebuffers: PFNGLDELETEFRAMEBUFFERSPROC;
        // pub extern var glad_glDeleteProgram: PFNGLDELETEPROGRAMPROC;
        // pub extern var glad_glDeleteProgramPipelines: PFNGLDELETEPROGRAMPIPELINESPROC;
        // pub extern var glad_glDeleteQueries: PFNGLDELETEQUERIESPROC;
        // pub extern var glad_glDeleteRenderbuffers: PFNGLDELETERENDERBUFFERSPROC;
        // pub extern var glad_glDeleteSamplers: PFNGLDELETESAMPLERSPROC;
        // pub extern var glad_glDeleteShader: PFNGLDELETESHADERPROC;
        // pub extern var glad_glDeleteSync: PFNGLDELETESYNCPROC;
        // pub extern var glad_glDeleteTextures: PFNGLDELETETEXTURESPROC;
        // pub extern var glad_glDeleteTransformFeedbacks: PFNGLDELETETRANSFORMFEEDBACKSPROC;
        // pub extern var glad_glDeleteVertexArrays: PFNGLDELETEVERTEXARRAYSPROC;
        // pub extern var glad_glDepthFunc: PFNGLDEPTHFUNCPROC;
        // pub extern var glad_glDepthMask: PFNGLDEPTHMASKPROC;
        // pub extern var glad_glDepthRange: PFNGLDEPTHRANGEPROC;
        // pub extern var glad_glDepthRangeArrayv: PFNGLDEPTHRANGEARRAYVPROC;
        // pub extern var glad_glDepthRangeIndexed: PFNGLDEPTHRANGEINDEXEDPROC;
        // pub extern var glad_glDepthRangef: PFNGLDEPTHRANGEFPROC;
        // pub extern var glad_glDetachShader: PFNGLDETACHSHADERPROC;
        // pub extern var glad_glDisable: PFNGLDISABLEPROC;
        // pub extern var glad_glDisableVertexAttribArray: PFNGLDISABLEVERTEXATTRIBARRAYPROC;
        // pub extern var glad_glDisablei: PFNGLDISABLEIPROC;
        // pub extern var glad_glDrawArrays: PFNGLDRAWARRAYSPROC;
        // pub extern var glad_glDrawArraysIndirect: PFNGLDRAWARRAYSINDIRECTPROC;
        // pub extern var glad_glDrawArraysInstanced: PFNGLDRAWARRAYSINSTANCEDPROC;
        // pub extern var glad_glDrawBuffer: PFNGLDRAWBUFFERPROC;
        // pub extern var glad_glDrawBuffers: PFNGLDRAWBUFFERSPROC;
        // pub extern var glad_glDrawElements: PFNGLDRAWELEMENTSPROC;
        // pub extern var glad_glDrawElementsBaseVertex: PFNGLDRAWELEMENTSBASEVERTEXPROC;
        // pub extern var glad_glDrawElementsIndirect: PFNGLDRAWELEMENTSINDIRECTPROC;
        // pub extern var glad_glDrawElementsInstanced: PFNGLDRAWELEMENTSINSTANCEDPROC;
        // pub extern var glad_glDrawElementsInstancedBaseVertex: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC;
        // pub extern var glad_glDrawRangeElements: PFNGLDRAWRANGEELEMENTSPROC;
        // pub extern var glad_glDrawRangeElementsBaseVertex: PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC;
        // pub extern var glad_glDrawTransformFeedback: PFNGLDRAWTRANSFORMFEEDBACKPROC;
        // pub extern var glad_glDrawTransformFeedbackStream: PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC;
        // pub extern var glad_glEnable: PFNGLENABLEPROC;
        // pub extern var glad_glEnableVertexAttribArray: PFNGLENABLEVERTEXATTRIBARRAYPROC;
        // pub extern var glad_glEnablei: PFNGLENABLEIPROC;
        // pub extern var glad_glEndConditionalRender: PFNGLENDCONDITIONALRENDERPROC;
        // pub extern var glad_glEndQuery: PFNGLENDQUERYPROC;
        // pub extern var glad_glEndQueryIndexed: PFNGLENDQUERYINDEXEDPROC;
        // pub extern var glad_glEndTransformFeedback: PFNGLENDTRANSFORMFEEDBACKPROC;
        // pub extern var glad_glFenceSync: PFNGLFENCESYNCPROC;
        // pub extern var glad_glFinish: PFNGLFINISHPROC;
        // pub extern var glad_glFlush: PFNGLFLUSHPROC;
        // pub extern var glad_glFlushMappedBufferRange: PFNGLFLUSHMAPPEDBUFFERRANGEPROC;
        // pub extern var glad_glFramebufferRenderbuffer: PFNGLFRAMEBUFFERRENDERBUFFERPROC;
        // pub extern var glad_glFramebufferTexture: PFNGLFRAMEBUFFERTEXTUREPROC;
        // pub extern var glad_glFramebufferTexture1D: PFNGLFRAMEBUFFERTEXTURE1DPROC;
        // pub extern var glad_glFramebufferTexture2D: PFNGLFRAMEBUFFERTEXTURE2DPROC;
        // pub extern var glad_glFramebufferTexture3D: PFNGLFRAMEBUFFERTEXTURE3DPROC;
        // pub extern var glad_glFramebufferTextureLayer: PFNGLFRAMEBUFFERTEXTURELAYERPROC;
        // pub extern var glad_glFrontFace: PFNGLFRONTFACEPROC;
        // pub extern var glad_glGenBuffers: PFNGLGENBUFFERSPROC;
        // pub extern var glad_glGenFramebuffers: PFNGLGENFRAMEBUFFERSPROC;
        // pub extern var glad_glGenProgramPipelines: PFNGLGENPROGRAMPIPELINESPROC;
        // pub extern var glad_glGenQueries: PFNGLGENQUERIESPROC;
        // pub extern var glad_glGenRenderbuffers: PFNGLGENRENDERBUFFERSPROC;
        // pub extern var glad_glGenSamplers: PFNGLGENSAMPLERSPROC;
        // pub extern var glad_glGenTextures: PFNGLGENTEXTURESPROC;
        // pub extern var glad_glGenTransformFeedbacks: PFNGLGENTRANSFORMFEEDBACKSPROC;
        // pub extern var glad_glGenVertexArrays: PFNGLGENVERTEXARRAYSPROC;
        // pub extern var glad_glGenerateMipmap: PFNGLGENERATEMIPMAPPROC;
        // pub extern var glad_glGetActiveAttrib: PFNGLGETACTIVEATTRIBPROC;
        // pub extern var glad_glGetActiveSubroutineName: PFNGLGETACTIVESUBROUTINENAMEPROC;
        // pub extern var glad_glGetActiveSubroutineUniformName: PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC;
        // pub extern var glad_glGetActiveSubroutineUniformiv: PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC;
        // pub extern var glad_glGetActiveUniform: PFNGLGETACTIVEUNIFORMPROC;
        // pub extern var glad_glGetActiveUniformBlockName: PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC;
        // pub extern var glad_glGetActiveUniformBlockiv: PFNGLGETACTIVEUNIFORMBLOCKIVPROC;
        // pub extern var glad_glGetActiveUniformName: PFNGLGETACTIVEUNIFORMNAMEPROC;
        // pub extern var glad_glGetActiveUniformsiv: PFNGLGETACTIVEUNIFORMSIVPROC;
        // pub extern var glad_glGetAttachedShaders: PFNGLGETATTACHEDSHADERSPROC;
        // pub extern var glad_glGetAttribLocation: PFNGLGETATTRIBLOCATIONPROC;
        // pub extern var glad_glGetBooleani_v: PFNGLGETBOOLEANI_VPROC;
        // pub extern var glad_glGetBooleanv: PFNGLGETBOOLEANVPROC;
        // pub extern var glad_glGetBufferParameteri64v: PFNGLGETBUFFERPARAMETERI64VPROC;
        // pub extern var glad_glGetBufferParameteriv: PFNGLGETBUFFERPARAMETERIVPROC;
        // pub extern var glad_glGetBufferPointerv: PFNGLGETBUFFERPOINTERVPROC;
        // pub extern var glad_glGetBufferSubData: PFNGLGETBUFFERSUBDATAPROC;
        // pub extern var glad_glGetCompressedTexImage: PFNGLGETCOMPRESSEDTEXIMAGEPROC;
        // pub extern var glad_glGetDoublei_v: PFNGLGETDOUBLEI_VPROC;
        // pub extern var glad_glGetDoublev: PFNGLGETDOUBLEVPROC;
        // pub extern var glad_glGetError: PFNGLGETERRORPROC;
        // pub extern var glad_glGetFloati_v: PFNGLGETFLOATI_VPROC;
        // pub extern var glad_glGetFloatv: PFNGLGETFLOATVPROC;
        // pub extern var glad_glGetFragDataIndex: PFNGLGETFRAGDATAINDEXPROC;
        // pub extern var glad_glGetFragDataLocation: PFNGLGETFRAGDATALOCATIONPROC;
        // pub extern var glad_glGetFramebufferAttachmentParameteriv: PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC;
        // pub extern var glad_glGetInteger64i_v: PFNGLGETINTEGER64I_VPROC;
        // pub extern var glad_glGetInteger64v: PFNGLGETINTEGER64VPROC;
        // pub extern var glad_glGetIntegeri_v: PFNGLGETINTEGERI_VPROC;
        // pub extern var glad_glGetIntegerv: PFNGLGETINTEGERVPROC;
        // pub extern var glad_glGetMultisamplefv: PFNGLGETMULTISAMPLEFVPROC;
        // pub extern var glad_glGetProgramBinary: PFNGLGETPROGRAMBINARYPROC;
        // pub extern var glad_glGetProgramInfoLog: PFNGLGETPROGRAMINFOLOGPROC;
        // pub extern var glad_glGetProgramPipelineInfoLog: PFNGLGETPROGRAMPIPELINEINFOLOGPROC;
        // pub extern var glad_glGetProgramPipelineiv: PFNGLGETPROGRAMPIPELINEIVPROC;
        // pub extern var glad_glGetProgramStageiv: PFNGLGETPROGRAMSTAGEIVPROC;
        // pub extern var glad_glGetProgramiv: PFNGLGETPROGRAMIVPROC;
        // pub extern var glad_glGetQueryIndexediv: PFNGLGETQUERYINDEXEDIVPROC;
        // pub extern var glad_glGetQueryObjecti64v: PFNGLGETQUERYOBJECTI64VPROC;
        // pub extern var glad_glGetQueryObjectiv: PFNGLGETQUERYOBJECTIVPROC;
        // pub extern var glad_glGetQueryObjectui64v: PFNGLGETQUERYOBJECTUI64VPROC;
        // pub extern var glad_glGetQueryObjectuiv: PFNGLGETQUERYOBJECTUIVPROC;
        // pub extern var glad_glGetQueryiv: PFNGLGETQUERYIVPROC;
        // pub extern var glad_glGetRenderbufferParameteriv: PFNGLGETRENDERBUFFERPARAMETERIVPROC;
        // pub extern var glad_glGetSamplerParameterIiv: PFNGLGETSAMPLERPARAMETERIIVPROC;
        // pub extern var glad_glGetSamplerParameterIuiv: PFNGLGETSAMPLERPARAMETERIUIVPROC;
        // pub extern var glad_glGetSamplerParameterfv: PFNGLGETSAMPLERPARAMETERFVPROC;
        // pub extern var glad_glGetSamplerParameteriv: PFNGLGETSAMPLERPARAMETERIVPROC;
        // pub extern var glad_glGetShaderInfoLog: PFNGLGETSHADERINFOLOGPROC;
        // pub extern var glad_glGetShaderPrecisionFormat: PFNGLGETSHADERPRECISIONFORMATPROC;
        // pub extern var glad_glGetShaderSource: PFNGLGETSHADERSOURCEPROC;
        // pub extern var glad_glGetShaderiv: PFNGLGETSHADERIVPROC;
        // pub extern var glad_glGetString: PFNGLGETSTRINGPROC;
        // pub extern var glad_glGetStringi: PFNGLGETSTRINGIPROC;
        // pub extern var glad_glGetSubroutineIndex: PFNGLGETSUBROUTINEINDEXPROC;
        // pub extern var glad_glGetSubroutineUniformLocation: PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC;
        // pub extern var glad_glGetSynciv: PFNGLGETSYNCIVPROC;
        // pub extern var glad_glGetTexImage: PFNGLGETTEXIMAGEPROC;
        // pub extern var glad_glGetTexLevelParameterfv: PFNGLGETTEXLEVELPARAMETERFVPROC;
        // pub extern var glad_glGetTexLevelParameteriv: PFNGLGETTEXLEVELPARAMETERIVPROC;
        // pub extern var glad_glGetTexParameterIiv: PFNGLGETTEXPARAMETERIIVPROC;
        // pub extern var glad_glGetTexParameterIuiv: PFNGLGETTEXPARAMETERIUIVPROC;
        // pub extern var glad_glGetTexParameterfv: PFNGLGETTEXPARAMETERFVPROC;
        // pub extern var glad_glGetTexParameteriv: PFNGLGETTEXPARAMETERIVPROC;
        // pub extern var glad_glGetTransformFeedbackVarying: PFNGLGETTRANSFORMFEEDBACKVARYINGPROC;
        // pub extern var glad_glGetUniformBlockIndex: PFNGLGETUNIFORMBLOCKINDEXPROC;
        // pub extern var glad_glGetUniformIndices: PFNGLGETUNIFORMINDICESPROC;
        // pub extern var glad_glGetUniformLocation: PFNGLGETUNIFORMLOCATIONPROC;
        // pub extern var glad_glGetUniformSubroutineuiv: PFNGLGETUNIFORMSUBROUTINEUIVPROC;
        // pub extern var glad_glGetUniformdv: PFNGLGETUNIFORMDVPROC;
        // pub extern var glad_glGetUniformfv: PFNGLGETUNIFORMFVPROC;
        // pub extern var glad_glGetUniformiv: PFNGLGETUNIFORMIVPROC;
        // pub extern var glad_glGetUniformuiv: PFNGLGETUNIFORMUIVPROC;
        // pub extern var glad_glGetVertexAttribIiv: PFNGLGETVERTEXATTRIBIIVPROC;
        // pub extern var glad_glGetVertexAttribIuiv: PFNGLGETVERTEXATTRIBIUIVPROC;
        // pub extern var glad_glGetVertexAttribLdv: PFNGLGETVERTEXATTRIBLDVPROC;
        // pub extern var glad_glGetVertexAttribPointerv: PFNGLGETVERTEXATTRIBPOINTERVPROC;
        // pub extern var glad_glGetVertexAttribdv: PFNGLGETVERTEXATTRIBDVPROC;
        // pub extern var glad_glGetVertexAttribfv: PFNGLGETVERTEXATTRIBFVPROC;
        // pub extern var glad_glGetVertexAttribiv: PFNGLGETVERTEXATTRIBIVPROC;
        // pub extern var glad_glHint: PFNGLHINTPROC;
        // pub extern var glad_glIsBuffer: PFNGLISBUFFERPROC;
        // pub extern var glad_glIsEnabled: PFNGLISENABLEDPROC;
        // pub extern var glad_glIsEnabledi: PFNGLISENABLEDIPROC;
        // pub extern var glad_glIsFramebuffer: PFNGLISFRAMEBUFFERPROC;
        // pub extern var glad_glIsProgram: PFNGLISPROGRAMPROC;
        // pub extern var glad_glIsProgramPipeline: PFNGLISPROGRAMPIPELINEPROC;
        // pub extern var glad_glIsQuery: PFNGLISQUERYPROC;
        // pub extern var glad_glIsRenderbuffer: PFNGLISRENDERBUFFERPROC;
        // pub extern var glad_glIsSampler: PFNGLISSAMPLERPROC;
        // pub extern var glad_glIsShader: PFNGLISSHADERPROC;
        // pub extern var glad_glIsSync: PFNGLISSYNCPROC;
        // pub extern var glad_glIsTexture: PFNGLISTEXTUREPROC;
        // pub extern var glad_glIsTransformFeedback: PFNGLISTRANSFORMFEEDBACKPROC;
        // pub extern var glad_glIsVertexArray: PFNGLISVERTEXARRAYPROC;
        // pub extern var glad_glLineWidth: PFNGLLINEWIDTHPROC;
        // pub extern var glad_glLinkProgram: PFNGLLINKPROGRAMPROC;
        // pub extern var glad_glLogicOp: PFNGLLOGICOPPROC;
        // pub extern var glad_glMapBuffer: PFNGLMAPBUFFERPROC;
        // pub extern var glad_glMapBufferRange: PFNGLMAPBUFFERRANGEPROC;
        // pub extern var glad_glMinSampleShading: PFNGLMINSAMPLESHADINGPROC;
        // pub extern var glad_glMultiDrawArrays: PFNGLMULTIDRAWARRAYSPROC;
        // pub extern var glad_glMultiDrawElements: PFNGLMULTIDRAWELEMENTSPROC;
        // pub extern var glad_glMultiDrawElementsBaseVertex: PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC;
        // pub extern var glad_glPatchParameterfv: PFNGLPATCHPARAMETERFVPROC;
        // pub extern var glad_glPatchParameteri: PFNGLPATCHPARAMETERIPROC;
        // pub extern var glad_glPauseTransformFeedback: PFNGLPAUSETRANSFORMFEEDBACKPROC;
        // pub extern var glad_glPixelStoref: PFNGLPIXELSTOREFPROC;
        // pub extern var glad_glPixelStorei: PFNGLPIXELSTOREIPROC;
        // pub extern var glad_glPointParameterf: PFNGLPOINTPARAMETERFPROC;
        // pub extern var glad_glPointParameterfv: PFNGLPOINTPARAMETERFVPROC;
        // pub extern var glad_glPointParameteri: PFNGLPOINTPARAMETERIPROC;
        // pub extern var glad_glPointParameteriv: PFNGLPOINTPARAMETERIVPROC;
        // pub extern var glad_glPointSize: PFNGLPOINTSIZEPROC;
        // pub extern var glad_glPolygonMode: PFNGLPOLYGONMODEPROC;
        // pub extern var glad_glPolygonOffset: PFNGLPOLYGONOFFSETPROC;
        // pub extern var glad_glPrimitiveRestartIndex: PFNGLPRIMITIVERESTARTINDEXPROC;
        // pub extern var glad_glProgramBinary: PFNGLPROGRAMBINARYPROC;
        // pub extern var glad_glProgramParameteri: PFNGLPROGRAMPARAMETERIPROC;
        // pub extern var glad_glProgramUniform1d: PFNGLPROGRAMUNIFORM1DPROC;
        // pub extern var glad_glProgramUniform1dv: PFNGLPROGRAMUNIFORM1DVPROC;
        // pub extern var glad_glProgramUniform1f: PFNGLPROGRAMUNIFORM1FPROC;
        // pub extern var glad_glProgramUniform1fv: PFNGLPROGRAMUNIFORM1FVPROC;
        // pub extern var glad_glProgramUniform1i: PFNGLPROGRAMUNIFORM1IPROC;
        // pub extern var glad_glProgramUniform1iv: PFNGLPROGRAMUNIFORM1IVPROC;
        // pub extern var glad_glProgramUniform1ui: PFNGLPROGRAMUNIFORM1UIPROC;
        // pub extern var glad_glProgramUniform1uiv: PFNGLPROGRAMUNIFORM1UIVPROC;
        // pub extern var glad_glProgramUniform2d: PFNGLPROGRAMUNIFORM2DPROC;
        // pub extern var glad_glProgramUniform2dv: PFNGLPROGRAMUNIFORM2DVPROC;
        // pub extern var glad_glProgramUniform2f: PFNGLPROGRAMUNIFORM2FPROC;
        // pub extern var glad_glProgramUniform2fv: PFNGLPROGRAMUNIFORM2FVPROC;
        // pub extern var glad_glProgramUniform2i: PFNGLPROGRAMUNIFORM2IPROC;
        // pub extern var glad_glProgramUniform2iv: PFNGLPROGRAMUNIFORM2IVPROC;
        // pub extern var glad_glProgramUniform2ui: PFNGLPROGRAMUNIFORM2UIPROC;
        // pub extern var glad_glProgramUniform2uiv: PFNGLPROGRAMUNIFORM2UIVPROC;
        // pub extern var glad_glProgramUniform3d: PFNGLPROGRAMUNIFORM3DPROC;
        // pub extern var glad_glProgramUniform3dv: PFNGLPROGRAMUNIFORM3DVPROC;
        // pub extern var glad_glProgramUniform3f: PFNGLPROGRAMUNIFORM3FPROC;
        // pub extern var glad_glProgramUniform3fv: PFNGLPROGRAMUNIFORM3FVPROC;
        // pub extern var glad_glProgramUniform3i: PFNGLPROGRAMUNIFORM3IPROC;
        // pub extern var glad_glProgramUniform3iv: PFNGLPROGRAMUNIFORM3IVPROC;
        // pub extern var glad_glProgramUniform3ui: PFNGLPROGRAMUNIFORM3UIPROC;
        // pub extern var glad_glProgramUniform3uiv: PFNGLPROGRAMUNIFORM3UIVPROC;
        // pub extern var glad_glProgramUniform4d: PFNGLPROGRAMUNIFORM4DPROC;
        // pub extern var glad_glProgramUniform4dv: PFNGLPROGRAMUNIFORM4DVPROC;
        // pub extern var glad_glProgramUniform4f: PFNGLPROGRAMUNIFORM4FPROC;
        // pub extern var glad_glProgramUniform4fv: PFNGLPROGRAMUNIFORM4FVPROC;
        // pub extern var glad_glProgramUniform4i: PFNGLPROGRAMUNIFORM4IPROC;
        // pub extern var glad_glProgramUniform4iv: PFNGLPROGRAMUNIFORM4IVPROC;
        // pub extern var glad_glProgramUniform4ui: PFNGLPROGRAMUNIFORM4UIPROC;
        // pub extern var glad_glProgramUniform4uiv: PFNGLPROGRAMUNIFORM4UIVPROC;
        // pub extern var glad_glProgramUniformMatrix2dv: PFNGLPROGRAMUNIFORMMATRIX2DVPROC;
        // pub extern var glad_glProgramUniformMatrix2fv: PFNGLPROGRAMUNIFORMMATRIX2FVPROC;
        // pub extern var glad_glProgramUniformMatrix2x3dv: PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC;
        // pub extern var glad_glProgramUniformMatrix2x3fv: PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC;
        // pub extern var glad_glProgramUniformMatrix2x4dv: PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC;
        // pub extern var glad_glProgramUniformMatrix2x4fv: PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC;
        // pub extern var glad_glProgramUniformMatrix3dv: PFNGLPROGRAMUNIFORMMATRIX3DVPROC;
        // pub extern var glad_glProgramUniformMatrix3fv: PFNGLPROGRAMUNIFORMMATRIX3FVPROC;
        // pub extern var glad_glProgramUniformMatrix3x2dv: PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC;
        // pub extern var glad_glProgramUniformMatrix3x2fv: PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC;
        // pub extern var glad_glProgramUniformMatrix3x4dv: PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC;
        // pub extern var glad_glProgramUniformMatrix3x4fv: PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC;
        // pub extern var glad_glProgramUniformMatrix4dv: PFNGLPROGRAMUNIFORMMATRIX4DVPROC;
        // pub extern var glad_glProgramUniformMatrix4fv: PFNGLPROGRAMUNIFORMMATRIX4FVPROC;
        // pub extern var glad_glProgramUniformMatrix4x2dv: PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC;
        // pub extern var glad_glProgramUniformMatrix4x2fv: PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC;
        // pub extern var glad_glProgramUniformMatrix4x3dv: PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC;
        // pub extern var glad_glProgramUniformMatrix4x3fv: PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC;
        // pub extern var glad_glProvokingVertex: PFNGLPROVOKINGVERTEXPROC;
        // pub extern var glad_glQueryCounter: PFNGLQUERYCOUNTERPROC;
        // pub extern var glad_glReadBuffer: PFNGLREADBUFFERPROC;
        // pub extern var glad_glReadPixels: PFNGLREADPIXELSPROC;
        // pub extern var glad_glReleaseShaderCompiler: PFNGLRELEASESHADERCOMPILERPROC;
        // pub extern var glad_glRenderbufferStorage: PFNGLRENDERBUFFERSTORAGEPROC;
        // pub extern var glad_glRenderbufferStorageMultisample: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC;
        // pub extern var glad_glResumeTransformFeedback: PFNGLRESUMETRANSFORMFEEDBACKPROC;
        // pub extern var glad_glSampleCoverage: PFNGLSAMPLECOVERAGEPROC;
        // pub extern var glad_glSampleMaski: PFNGLSAMPLEMASKIPROC;
        // pub extern var glad_glSamplerParameterIiv: PFNGLSAMPLERPARAMETERIIVPROC;
        // pub extern var glad_glSamplerParameterIuiv: PFNGLSAMPLERPARAMETERIUIVPROC;
        // pub extern var glad_glSamplerParameterf: PFNGLSAMPLERPARAMETERFPROC;
        // pub extern var glad_glSamplerParameterfv: PFNGLSAMPLERPARAMETERFVPROC;
        // pub extern var glad_glSamplerParameteri: PFNGLSAMPLERPARAMETERIPROC;
        // pub extern var glad_glSamplerParameteriv: PFNGLSAMPLERPARAMETERIVPROC;
        // pub extern var glad_glScissor: PFNGLSCISSORPROC;
        // pub extern var glad_glScissorArrayv: PFNGLSCISSORARRAYVPROC;
        // pub extern var glad_glScissorIndexed: PFNGLSCISSORINDEXEDPROC;
        // pub extern var glad_glScissorIndexedv: PFNGLSCISSORINDEXEDVPROC;
        // pub extern var glad_glShaderBinary: PFNGLSHADERBINARYPROC;
        // pub extern var glad_glShaderSource: PFNGLSHADERSOURCEPROC;
        // pub extern var glad_glStencilFunc: PFNGLSTENCILFUNCPROC;
        // pub extern var glad_glStencilFuncSeparate: PFNGLSTENCILFUNCSEPARATEPROC;
        // pub extern var glad_glStencilMask: PFNGLSTENCILMASKPROC;
        // pub extern var glad_glStencilMaskSeparate: PFNGLSTENCILMASKSEPARATEPROC;
        // pub extern var glad_glStencilOp: PFNGLSTENCILOPPROC;
        // pub extern var glad_glStencilOpSeparate: PFNGLSTENCILOPSEPARATEPROC;
        // pub extern var glad_glTexBuffer: PFNGLTEXBUFFERPROC;
        // pub extern var glad_glTexImage1D: PFNGLTEXIMAGE1DPROC;
        // pub extern var glad_glTexImage2D: PFNGLTEXIMAGE2DPROC;
        // pub extern var glad_glTexImage2DMultisample: PFNGLTEXIMAGE2DMULTISAMPLEPROC;
        // pub extern var glad_glTexImage3D: PFNGLTEXIMAGE3DPROC;
        // pub extern var glad_glTexImage3DMultisample: PFNGLTEXIMAGE3DMULTISAMPLEPROC;
        // pub extern var glad_glTexParameterIiv: PFNGLTEXPARAMETERIIVPROC;
        // pub extern var glad_glTexParameterIuiv: PFNGLTEXPARAMETERIUIVPROC;
        // pub extern var glad_glTexParameterf: PFNGLTEXPARAMETERFPROC;
        // pub extern var glad_glTexParameterfv: PFNGLTEXPARAMETERFVPROC;
        // pub extern var glad_glTexParameteri: PFNGLTEXPARAMETERIPROC;
        // pub extern var glad_glTexParameteriv: PFNGLTEXPARAMETERIVPROC;
        // pub extern var glad_glTexSubImage1D: PFNGLTEXSUBIMAGE1DPROC;
        // pub extern var glad_glTexSubImage2D: PFNGLTEXSUBIMAGE2DPROC;
        // pub extern var glad_glTexSubImage3D: PFNGLTEXSUBIMAGE3DPROC;
        // pub extern var glad_glTransformFeedbackVaryings: PFNGLTRANSFORMFEEDBACKVARYINGSPROC;
        // pub extern var glad_glUniform1d: PFNGLUNIFORM1DPROC;
        // pub extern var glad_glUniform1dv: PFNGLUNIFORM1DVPROC;
        // pub extern var glad_glUniform1f: PFNGLUNIFORM1FPROC;
        // pub extern var glad_glUniform1fv: PFNGLUNIFORM1FVPROC;
        // pub extern var glad_glUniform1i: PFNGLUNIFORM1IPROC;
        // pub extern var glad_glUniform1iv: PFNGLUNIFORM1IVPROC;
        // pub extern var glad_glUniform1ui: PFNGLUNIFORM1UIPROC;
        // pub extern var glad_glUniform1uiv: PFNGLUNIFORM1UIVPROC;
        // pub extern var glad_glUniform2d: PFNGLUNIFORM2DPROC;
        // pub extern var glad_glUniform2dv: PFNGLUNIFORM2DVPROC;
        // pub extern var glad_glUniform2f: PFNGLUNIFORM2FPROC;
        // pub extern var glad_glUniform2fv: PFNGLUNIFORM2FVPROC;
        // pub extern var glad_glUniform2i: PFNGLUNIFORM2IPROC;
        // pub extern var glad_glUniform2iv: PFNGLUNIFORM2IVPROC;
        // pub extern var glad_glUniform2ui: PFNGLUNIFORM2UIPROC;
        // pub extern var glad_glUniform2uiv: PFNGLUNIFORM2UIVPROC;
        // pub extern var glad_glUniform3d: PFNGLUNIFORM3DPROC;
        // pub extern var glad_glUniform3dv: PFNGLUNIFORM3DVPROC;
        // pub extern var glad_glUniform3f: PFNGLUNIFORM3FPROC;
        // pub extern var glad_glUniform3fv: PFNGLUNIFORM3FVPROC;
        // pub extern var glad_glUniform3i: PFNGLUNIFORM3IPROC;
        // pub extern var glad_glUniform3iv: PFNGLUNIFORM3IVPROC;
        // pub extern var glad_glUniform3ui: PFNGLUNIFORM3UIPROC;
        // pub extern var glad_glUniform3uiv: PFNGLUNIFORM3UIVPROC;
        // pub extern var glad_glUniform4d: PFNGLUNIFORM4DPROC;
        // pub extern var glad_glUniform4dv: PFNGLUNIFORM4DVPROC;
        // pub extern var glad_glUniform4f: PFNGLUNIFORM4FPROC;
        // pub extern var glad_glUniform4fv: PFNGLUNIFORM4FVPROC;
        // pub extern var glad_glUniform4i: PFNGLUNIFORM4IPROC;
        // pub extern var glad_glUniform4iv: PFNGLUNIFORM4IVPROC;
        // pub extern var glad_glUniform4ui: PFNGLUNIFORM4UIPROC;
        // pub extern var glad_glUniform4uiv: PFNGLUNIFORM4UIVPROC;
        // pub extern var glad_glUniformBlockBinding: PFNGLUNIFORMBLOCKBINDINGPROC;
        // pub extern var glad_glUniformMatrix2dv: PFNGLUNIFORMMATRIX2DVPROC;
        // pub extern var glad_glUniformMatrix2fv: PFNGLUNIFORMMATRIX2FVPROC;
        // pub extern var glad_glUniformMatrix2x3dv: PFNGLUNIFORMMATRIX2X3DVPROC;
        // pub extern var glad_glUniformMatrix2x3fv: PFNGLUNIFORMMATRIX2X3FVPROC;
        // pub extern var glad_glUniformMatrix2x4dv: PFNGLUNIFORMMATRIX2X4DVPROC;
        // pub extern var glad_glUniformMatrix2x4fv: PFNGLUNIFORMMATRIX2X4FVPROC;
        // pub extern var glad_glUniformMatrix3dv: PFNGLUNIFORMMATRIX3DVPROC;
        // pub extern var glad_glUniformMatrix3fv: PFNGLUNIFORMMATRIX3FVPROC;
        // pub extern var glad_glUniformMatrix3x2dv: PFNGLUNIFORMMATRIX3X2DVPROC;
        // pub extern var glad_glUniformMatrix3x2fv: PFNGLUNIFORMMATRIX3X2FVPROC;
        // pub extern var glad_glUniformMatrix3x4dv: PFNGLUNIFORMMATRIX3X4DVPROC;
        // pub extern var glad_glUniformMatrix3x4fv: PFNGLUNIFORMMATRIX3X4FVPROC;
        // pub extern var glad_glUniformMatrix4dv: PFNGLUNIFORMMATRIX4DVPROC;
        // pub extern var glad_glUniformMatrix4fv: PFNGLUNIFORMMATRIX4FVPROC;
        // pub extern var glad_glUniformMatrix4x2dv: PFNGLUNIFORMMATRIX4X2DVPROC;
        // pub extern var glad_glUniformMatrix4x2fv: PFNGLUNIFORMMATRIX4X2FVPROC;
        // pub extern var glad_glUniformMatrix4x3dv: PFNGLUNIFORMMATRIX4X3DVPROC;
        // pub extern var glad_glUniformMatrix4x3fv: PFNGLUNIFORMMATRIX4X3FVPROC;
        // pub extern var glad_glUniformSubroutinesuiv: PFNGLUNIFORMSUBROUTINESUIVPROC;
        // pub extern var glad_glUnmapBuffer: PFNGLUNMAPBUFFERPROC;
        // pub extern var glad_glUseProgram: PFNGLUSEPROGRAMPROC;
        // pub extern var glad_glUseProgramStages: PFNGLUSEPROGRAMSTAGESPROC;
        // pub extern var glad_glValidateProgram: PFNGLVALIDATEPROGRAMPROC;
        // pub extern var glad_glValidateProgramPipeline: PFNGLVALIDATEPROGRAMPIPELINEPROC;
        // pub extern var glad_glVertexAttrib1d: PFNGLVERTEXATTRIB1DPROC;
        // pub extern var glad_glVertexAttrib1dv: PFNGLVERTEXATTRIB1DVPROC;
        // pub extern var glad_glVertexAttrib1f: PFNGLVERTEXATTRIB1FPROC;
        // pub extern var glad_glVertexAttrib1fv: PFNGLVERTEXATTRIB1FVPROC;
        // pub extern var glad_glVertexAttrib1s: PFNGLVERTEXATTRIB1SPROC;
        // pub extern var glad_glVertexAttrib1sv: PFNGLVERTEXATTRIB1SVPROC;
        // pub extern var glad_glVertexAttrib2d: PFNGLVERTEXATTRIB2DPROC;
        // pub extern var glad_glVertexAttrib2dv: PFNGLVERTEXATTRIB2DVPROC;
        // pub extern var glad_glVertexAttrib2f: PFNGLVERTEXATTRIB2FPROC;
        // pub extern var glad_glVertexAttrib2fv: PFNGLVERTEXATTRIB2FVPROC;
        // pub extern var glad_glVertexAttrib2s: PFNGLVERTEXATTRIB2SPROC;
        // pub extern var glad_glVertexAttrib2sv: PFNGLVERTEXATTRIB2SVPROC;
        // pub extern var glad_glVertexAttrib3d: PFNGLVERTEXATTRIB3DPROC;
        // pub extern var glad_glVertexAttrib3dv: PFNGLVERTEXATTRIB3DVPROC;
        // pub extern var glad_glVertexAttrib3f: PFNGLVERTEXATTRIB3FPROC;
        // pub extern var glad_glVertexAttrib3fv: PFNGLVERTEXATTRIB3FVPROC;
        // pub extern var glad_glVertexAttrib3s: PFNGLVERTEXATTRIB3SPROC;
        // pub extern var glad_glVertexAttrib3sv: PFNGLVERTEXATTRIB3SVPROC;
        // pub extern var glad_glVertexAttrib4Nbv: PFNGLVERTEXATTRIB4NBVPROC;
        // pub extern var glad_glVertexAttrib4Niv: PFNGLVERTEXATTRIB4NIVPROC;
        // pub extern var glad_glVertexAttrib4Nsv: PFNGLVERTEXATTRIB4NSVPROC;
        // pub extern var glad_glVertexAttrib4Nub: PFNGLVERTEXATTRIB4NUBPROC;
        // pub extern var glad_glVertexAttrib4Nubv: PFNGLVERTEXATTRIB4NUBVPROC;
        // pub extern var glad_glVertexAttrib4Nuiv: PFNGLVERTEXATTRIB4NUIVPROC;
        // pub extern var glad_glVertexAttrib4Nusv: PFNGLVERTEXATTRIB4NUSVPROC;
        // pub extern var glad_glVertexAttrib4bv: PFNGLVERTEXATTRIB4BVPROC;
        // pub extern var glad_glVertexAttrib4d: PFNGLVERTEXATTRIB4DPROC;
        // pub extern var glad_glVertexAttrib4dv: PFNGLVERTEXATTRIB4DVPROC;
        // pub extern var glad_glVertexAttrib4f: PFNGLVERTEXATTRIB4FPROC;
        // pub extern var glad_glVertexAttrib4fv: PFNGLVERTEXATTRIB4FVPROC;
        // pub extern var glad_glVertexAttrib4iv: PFNGLVERTEXATTRIB4IVPROC;
        // pub extern var glad_glVertexAttrib4s: PFNGLVERTEXATTRIB4SPROC;
        // pub extern var glad_glVertexAttrib4sv: PFNGLVERTEXATTRIB4SVPROC;
        // pub extern var glad_glVertexAttrib4ubv: PFNGLVERTEXATTRIB4UBVPROC;
        // pub extern var glad_glVertexAttrib4uiv: PFNGLVERTEXATTRIB4UIVPROC;
        // pub extern var glad_glVertexAttrib4usv: PFNGLVERTEXATTRIB4USVPROC;
        // pub extern var glad_glVertexAttribDivisor: PFNGLVERTEXATTRIBDIVISORPROC;
        // pub extern var glad_glVertexAttribI1i: PFNGLVERTEXATTRIBI1IPROC;
        // pub extern var glad_glVertexAttribI1iv: PFNGLVERTEXATTRIBI1IVPROC;
        // pub extern var glad_glVertexAttribI1ui: PFNGLVERTEXATTRIBI1UIPROC;
        // pub extern var glad_glVertexAttribI1uiv: PFNGLVERTEXATTRIBI1UIVPROC;
        // pub extern var glad_glVertexAttribI2i: PFNGLVERTEXATTRIBI2IPROC;
        // pub extern var glad_glVertexAttribI2iv: PFNGLVERTEXATTRIBI2IVPROC;
        // pub extern var glad_glVertexAttribI2ui: PFNGLVERTEXATTRIBI2UIPROC;
        // pub extern var glad_glVertexAttribI2uiv: PFNGLVERTEXATTRIBI2UIVPROC;
        // pub extern var glad_glVertexAttribI3i: PFNGLVERTEXATTRIBI3IPROC;
        // pub extern var glad_glVertexAttribI3iv: PFNGLVERTEXATTRIBI3IVPROC;
        // pub extern var glad_glVertexAttribI3ui: PFNGLVERTEXATTRIBI3UIPROC;
        // pub extern var glad_glVertexAttribI3uiv: PFNGLVERTEXATTRIBI3UIVPROC;
        // pub extern var glad_glVertexAttribI4bv: PFNGLVERTEXATTRIBI4BVPROC;
        // pub extern var glad_glVertexAttribI4i: PFNGLVERTEXATTRIBI4IPROC;
        // pub extern var glad_glVertexAttribI4iv: PFNGLVERTEXATTRIBI4IVPROC;
        // pub extern var glad_glVertexAttribI4sv: PFNGLVERTEXATTRIBI4SVPROC;
        // pub extern var glad_glVertexAttribI4ubv: PFNGLVERTEXATTRIBI4UBVPROC;
        // pub extern var glad_glVertexAttribI4ui: PFNGLVERTEXATTRIBI4UIPROC;
        // pub extern var glad_glVertexAttribI4uiv: PFNGLVERTEXATTRIBI4UIVPROC;
        // pub extern var glad_glVertexAttribI4usv: PFNGLVERTEXATTRIBI4USVPROC;
        // pub extern var glad_glVertexAttribIPointer: PFNGLVERTEXATTRIBIPOINTERPROC;
        // pub extern var glad_glVertexAttribL1d: PFNGLVERTEXATTRIBL1DPROC;
        // pub extern var glad_glVertexAttribL1dv: PFNGLVERTEXATTRIBL1DVPROC;
        // pub extern var glad_glVertexAttribL2d: PFNGLVERTEXATTRIBL2DPROC;
        // pub extern var glad_glVertexAttribL2dv: PFNGLVERTEXATTRIBL2DVPROC;
        // pub extern var glad_glVertexAttribL3d: PFNGLVERTEXATTRIBL3DPROC;
        // pub extern var glad_glVertexAttribL3dv: PFNGLVERTEXATTRIBL3DVPROC;
        // pub extern var glad_glVertexAttribL4d: PFNGLVERTEXATTRIBL4DPROC;
        // pub extern var glad_glVertexAttribL4dv: PFNGLVERTEXATTRIBL4DVPROC;
        // pub extern var glad_glVertexAttribLPointer: PFNGLVERTEXATTRIBLPOINTERPROC;
        // pub extern var glad_glVertexAttribP1ui: PFNGLVERTEXATTRIBP1UIPROC;
        // pub extern var glad_glVertexAttribP1uiv: PFNGLVERTEXATTRIBP1UIVPROC;
        // pub extern var glad_glVertexAttribP2ui: PFNGLVERTEXATTRIBP2UIPROC;
        // pub extern var glad_glVertexAttribP2uiv: PFNGLVERTEXATTRIBP2UIVPROC;
        // pub extern var glad_glVertexAttribP3ui: PFNGLVERTEXATTRIBP3UIPROC;
        // pub extern var glad_glVertexAttribP3uiv: PFNGLVERTEXATTRIBP3UIVPROC;
        // pub extern var glad_glVertexAttribP4ui: PFNGLVERTEXATTRIBP4UIPROC;
        // pub extern var glad_glVertexAttribP4uiv: PFNGLVERTEXATTRIBP4UIVPROC;
        // pub extern var glad_glVertexAttribPointer: PFNGLVERTEXATTRIBPOINTERPROC;
        // pub extern var glad_glViewport: PFNGLVIEWPORTPROC;
        // pub extern var glad_glViewportArrayv: PFNGLVIEWPORTARRAYVPROC;
        // pub extern var glad_glViewportIndexedf: PFNGLVIEWPORTINDEXEDFPROC;
        // pub extern var glad_glViewportIndexedfv: PFNGLVIEWPORTINDEXEDFVPROC;
        // pub extern var glad_glWaitSync: PFNGLWAITSYNCPROC;
        // pub extern fn gladLoadGLUserPtr(load: GLADuserptrloadfunc, userptr: ?*anyopaque) c_int;
        // pub extern fn gladLoadGL(load: GLADloadfunc) c_int;
        // pub const GLAD_GNUC_EXTENSION = @compileError("unable to translate macro: undefined identifier `__extension__`"); // D:/__DOWNLOADS/_SOFTWARE/dev/GLFW/glad2-gl4.1-core/include/glad/gl.h:113:11
        // pub const GLAD_API_CALL = @compileError("unable to translate C expr: unexpected token 'extern'"); // D:/__DOWNLOADS/_SOFTWARE/dev/GLFW/glad2-gl4.1-core/include/glad/gl.h:142:13
        // pub const KHRONOS_APICALL = @compileError("unable to translate macro: undefined identifier `dllimport`"); // D:/__DOWNLOADS/_SOFTWARE/dev/GLFW/glad2-gl4.1-core/include/KHR/khrplatform.h:107:12
        // pub const GLAD_GL_H_ = "";
        // pub const GLAD_GL = "";
        // pub const GLAD_PLATFORM_H_ = "";
        // pub const GLAD_PLATFORM_WIN32 = @as(c_int, 1);
        // pub const GLAD_PLATFORM_APPLE = @as(c_int, 0);
        // pub const GLAD_PLATFORM_EMSCRIPTEN = @as(c_int, 0);
        // pub const GLAD_PLATFORM_UWP = @as(c_int, 0);
        // pub const GLAD_UNUSED = @import("std").zig.c_translation.Macros.DISCARD;
        // pub const GLAD_API_PTR = __stdcall;
        // pub const GLAPI = GLAD_API_CALL;
        // pub const GLAPIENTRY = GLAD_API_PTR;
        // pub inline fn GLAD_MAKE_VERSION(major: anytype, minor: anytype) @TypeOf((major * @as(c_int, 10000)) + minor) {
        //     return (major * @as(c_int, 10000)) + minor;
        // }
        // pub inline fn GLAD_VERSION_MAJOR(version: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div(version, @as(c_int, 10000))) {
        //     return @import("std").zig.c_translation.MacroArithmetic.div(version, @as(c_int, 10000));
        // }
        // pub inline fn GLAD_VERSION_MINOR(version: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.rem(version, @as(c_int, 10000))) {
        //     return @import("std").zig.c_translation.MacroArithmetic.rem(version, @as(c_int, 10000));
        // }
        // pub const GLAD_GENERATOR_VERSION = "2.0.4";
    };
}
